# Copper protrusion maker and energy minimizer
# Veske 2015
#
# -------------------------------------------
# --- General settings
# -------------------------------------------
units		metal
atom_style	atomic
boundary	p p fs

variable CuLat equal  3.61  # lattice constant, 3.61492505

variable orientation equal 100  # 100, 110 or 111
variable radius      equal 20   # Angstroms
variable height      equal 60  # Angstroms
variable angle       equal 0   # Degrees

variable dumpname    string "tip_*.dump"
variable scanX       equal 32 # 64, 64 or 19.5
variable scanY       equal 32 # 64, 45 or 22.5
variable scanD       equal 4  # 4, 4.2 or 3.5

# -------------------------------------------
# -- Orientation of unit cell
# -------------------------------------------
if   "${orientation} == 100" then &
    "lattice fcc ${CuLat} orient x 0 0 -1 orient y  0 1 0 orient z 1 0 0" &
elif "${orientation} == 110" &
    "lattice fcc ${CuLat} orient x 0 0 -1 orient y -1 1 0 orient z 1 1 0" &
elif "${orientation} == 111" &
    "lattice fcc ${CuLat} orient x 1 1 -2 orient y -1 1 0 orient z 1 1 1" &
else "print 'Unknown orientation!'" "quit"

# -------------------------------------------
# --- Simulation cell dimensions
# -------------------------------------------
if "${orientation} == 100" then &
    "variable sizeX  equal ${scanX}" &
    "variable sizeY  equal ${scanY}" &
    "variable plateH equal ${scanD}" &
    "variable divisH equal 1" &
    "variable divisR equal 1" &
elif "${orientation} == 110" &
    "variable sizeX  equal ${scanX}" &
    "variable sizeY  equal ${scanY}" &
    "variable plateH equal 4.2" &
    "variable divisH equal sqrt(2)" &
    "variable divisR equal 1" &
elif "${orientation} == 111" &
    "variable sizeX  equal ${scanX}" &
    "variable sizeY  equal ${scanY}" &
    "variable plateH equal ${scanD}" &
    "variable divisH equal sqrt(3)" &
    "variable divisR equal sqrt(3)" &
else "print 'Unknown orientation!'" "quit"

if "${scanD} == 0" then &
	 "variable plateH equal 0"

variable rhi     equal "v_radius / (v_CuLat*v_divisR)"
variable coneRlo equal "(v_radius + (v_height-v_radius) * tan(v_angle*PI/180)) / (v_CuLat*v_divisR)"
variable chamRlo equal "v_radius * (1+tan(PI/4)) / (v_CuLat*v_divisR)"
variable coneH   equal "(v_height-v_radius) / (v_CuLat*v_divisH)"
variable wireH   equal "v_height / (v_CuLat*v_divisH)"

# -------------------------------------------
# --- Create regions and atoms
# -------------------------------------------

region protrusion    cone   z 0 0 $(v_coneRlo) $(v_rhi) 0 $(v_coneH)
region protrusionTip sphere 0 0 $(v_height-v_radius) $(v_radius) units box
region chamfer       cone   z 0 0 $(v_chamRlo) $(v_rhi) 0 $(v_rhi)
region plate  block $(-v_sizeX/2) $(v_sizeX/2) $(-v_sizeY/2) $(v_sizeY/2) $(-v_plateH) 0 units lattice
region bigBox block $(-v_sizeX/2) $(v_sizeX/2) $(-v_sizeY/2) $(v_sizeY/2) $(-v_plateH) $(v_height/v_CuLat) units lattice
#region atomRegion union 4 plate protrusionTip protrusion chamfer
region atomRegion union 3 plate protrusionTip protrusion
#region protrusionRegion union 3 protrusionTip protrusion chamfer
region protrusionRegion union 2 protrusionTip protrusion
create_box   1 bigBox

#create_atoms 1 region atomRegion
if "${plateH} == 0" then &
	 "create_atoms 1 region protrusionRegion" &
else "create_atoms 1 region atomRegion"

variable        inff equal 4e9           # pseudo infinity
variable	lower   equal "zlo+3.0"  # z max of the fixed layer
region		botreg block -${inff} ${inff} -${inff} ${inff} -${inff} ${lower}   units box

group		botgroup region botreg
group		movgroup subtract all botgroup

# -------------------------------------------
# --- Specify potential & timestep
# -------------------------------------------

pair_style eam/alloy
pair_coeff * * in/Cu_mishin1.eam.alloy Cu

#pair_style eam
#pair_coeff * * ./Cu_u3.eam Cu

timestep  0.004

# --- Fix the bottom
fix botforce botgroup setforce 0 0 0

# -------------------------------------------
# --- What to print to dump file
# -------------------------------------------

dump   realDump all custom 1 atoms_*.dump type x y z vx vy vz fx fy fz

# -------------------------------------------
# --- Run simulation
# -------------------------------------------

reset_timestep  0
thermo		    10
thermo_style	custom step cpu temp press vol 
#min_style cg    # minimize with conjugate-gradient
#minimize 1e-25 1e-25 ${runtime} 100000 

fix nve1 all nve
velocity movgroup create 300.0 12345
# fix temp1 all temp/berendsen 300.0 300.0 100.0
fix fem1 movgroup femocs in.fem

run 20

